"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CdkPipelineStage = void 0;
// Copyright 2021 Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: MIT-0
const cdk = require("@aws-cdk/core");
const cdk_backend_stack_1 = require("../cdk-backend-stack");
const cdk_frontend_stack_1 = require("../cdk-frontend-stack");
const configParams = require('../../config.params.json');
const cdk_chime_event_bridge_stack_1 = require("../recording/cdk-chime-event-bridge-stack");
class CdkPipelineStage extends cdk.Stage {
    constructor(scope, id, props) {
        super(scope, id, props);
        const cdkBackendStack = new cdk_backend_stack_1.CdkBackendStack(this, configParams['CdkBackendStack']);
        if (props.deployRecordingStack) {
            const cdkChimeEventBridgeStack = new cdk_chime_event_bridge_stack_1.CdkChimeEventBridgeStack(this, configParams['CdkChimeEventBridgeStack'], {
                env: { account: process.env.CDK_DEFAULT_ACCOUNT, region: 'us-east-1' },
                cdkBackendStackRegion: cdkBackendStack.region,
                appTable: cdkBackendStack.appTable,
                recordingECSClusterARN: cdkBackendStack.recordingECSClusterARN,
                recordingECSClusterName: cdkBackendStack.recordingECSClusterName
            });
            cdkChimeEventBridgeStack.addDependency(cdkBackendStack);
        }
        const cdkFrontendStack = new cdk_frontend_stack_1.CdkFrontendStack(this, configParams['CdkFrontendStack'], {
            webAppBucket: cdkBackendStack.webAppBucket,
            webAppCloudFrontOAI: cdkBackendStack.webAppCloudFrontOAI
        });
        cdkFrontendStack.addDependency(cdkBackendStack);
    }
}
exports.CdkPipelineStage = CdkPipelineStage;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2RrLXBpcGVsaW5lLXN0YWdlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiY2RrLXBpcGVsaW5lLXN0YWdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDBFQUEwRTtBQUMxRSxpQ0FBaUM7QUFDakMscUNBQXFDO0FBQ3JDLDREQUF1RDtBQUN2RCw4REFBeUQ7QUFDekQsTUFBTSxZQUFZLEdBQUcsT0FBTyxDQUFDLDBCQUEwQixDQUFDLENBQUM7QUFDekQsNEZBQXFGO0FBTXJGLE1BQWEsZ0JBQWlCLFNBQVEsR0FBRyxDQUFDLEtBQUs7SUFDM0MsWUFBWSxLQUFvQixFQUFFLEVBQVUsRUFBRSxLQUE0QjtRQUN0RSxLQUFLLENBQUMsS0FBSyxFQUFFLEVBQUUsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUV4QixNQUFNLGVBQWUsR0FBRyxJQUFJLG1DQUFlLENBQUMsSUFBSSxFQUFFLFlBQVksQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUM7UUFFbkYsSUFBSSxLQUFLLENBQUMsb0JBQW9CLEVBQUU7WUFDNUIsTUFBTSx3QkFBd0IsR0FBRyxJQUFJLHVEQUF3QixDQUFDLElBQUksRUFBRSxZQUFZLENBQUMsMEJBQTBCLENBQUMsRUFBRTtnQkFDMUcsR0FBRyxFQUFFLEVBQUUsT0FBTyxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsbUJBQW1CLEVBQUUsTUFBTSxFQUFFLFdBQVcsRUFBRTtnQkFDdEUscUJBQXFCLEVBQUUsZUFBZSxDQUFDLE1BQU07Z0JBQzdDLFFBQVEsRUFBRSxlQUFlLENBQUMsUUFBUTtnQkFDbEMsc0JBQXNCLEVBQUUsZUFBZSxDQUFDLHNCQUFzQjtnQkFDOUQsdUJBQXVCLEVBQUUsZUFBZSxDQUFDLHVCQUF1QjthQUNuRSxDQUFDLENBQUM7WUFDSCx3QkFBd0IsQ0FBQyxhQUFhLENBQUMsZUFBZSxDQUFDLENBQUM7U0FDM0Q7UUFFRCxNQUFNLGdCQUFnQixHQUFHLElBQUkscUNBQWdCLENBQUMsSUFBSSxFQUFFLFlBQVksQ0FBQyxrQkFBa0IsQ0FBQyxFQUFFO1lBQ2xGLFlBQVksRUFBRSxlQUFlLENBQUMsWUFBWTtZQUMxQyxtQkFBbUIsRUFBRSxlQUFlLENBQUMsbUJBQW1CO1NBQzNELENBQUMsQ0FBQztRQUNILGdCQUFnQixDQUFDLGFBQWEsQ0FBQyxlQUFlLENBQUMsQ0FBQztJQUNwRCxDQUFDO0NBQ0o7QUF2QkQsNENBdUJDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEgQW1hem9uLmNvbSwgSW5jLiBvciBpdHMgYWZmaWxpYXRlcy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVQtMFxuaW1wb3J0ICogYXMgY2RrIGZyb20gJ0Bhd3MtY2RrL2NvcmUnO1xuaW1wb3J0IHsgQ2RrQmFja2VuZFN0YWNrIH0gZnJvbSAnLi4vY2RrLWJhY2tlbmQtc3RhY2snO1xuaW1wb3J0IHsgQ2RrRnJvbnRlbmRTdGFjayB9IGZyb20gJy4uL2Nkay1mcm9udGVuZC1zdGFjayc7XG5jb25zdCBjb25maWdQYXJhbXMgPSByZXF1aXJlKCcuLi8uLi9jb25maWcucGFyYW1zLmpzb24nKTtcbmltcG9ydCB7IENka0NoaW1lRXZlbnRCcmlkZ2VTdGFjayB9IGZyb20gJy4uL3JlY29yZGluZy9jZGstY2hpbWUtZXZlbnQtYnJpZGdlLXN0YWNrJztcblxuZXhwb3J0IGludGVyZmFjZSBDZGtQaXBlbGluZVN0YWdlUHJvcHMgZXh0ZW5kcyBjZGsuU3RhY2tQcm9wcyB7XG4gICAgcmVhZG9ubHkgZGVwbG95UmVjb3JkaW5nU3RhY2s6IGJvb2xlYW5cbn1cblxuZXhwb3J0IGNsYXNzIENka1BpcGVsaW5lU3RhZ2UgZXh0ZW5kcyBjZGsuU3RhZ2Uge1xuICAgIGNvbnN0cnVjdG9yKHNjb3BlOiBjZGsuQ29uc3RydWN0LCBpZDogc3RyaW5nLCBwcm9wczogQ2RrUGlwZWxpbmVTdGFnZVByb3BzKSB7XG4gICAgICAgIHN1cGVyKHNjb3BlLCBpZCwgcHJvcHMpO1xuXG4gICAgICAgIGNvbnN0IGNka0JhY2tlbmRTdGFjayA9IG5ldyBDZGtCYWNrZW5kU3RhY2sodGhpcywgY29uZmlnUGFyYW1zWydDZGtCYWNrZW5kU3RhY2snXSk7XG5cbiAgICAgICAgaWYgKHByb3BzLmRlcGxveVJlY29yZGluZ1N0YWNrKSB7XG4gICAgICAgICAgICBjb25zdCBjZGtDaGltZUV2ZW50QnJpZGdlU3RhY2sgPSBuZXcgQ2RrQ2hpbWVFdmVudEJyaWRnZVN0YWNrKHRoaXMsIGNvbmZpZ1BhcmFtc1snQ2RrQ2hpbWVFdmVudEJyaWRnZVN0YWNrJ10sIHtcbiAgICAgICAgICAgICAgICBlbnY6IHsgYWNjb3VudDogcHJvY2Vzcy5lbnYuQ0RLX0RFRkFVTFRfQUNDT1VOVCwgcmVnaW9uOiAndXMtZWFzdC0xJyB9LFxuICAgICAgICAgICAgICAgIGNka0JhY2tlbmRTdGFja1JlZ2lvbjogY2RrQmFja2VuZFN0YWNrLnJlZ2lvbixcbiAgICAgICAgICAgICAgICBhcHBUYWJsZTogY2RrQmFja2VuZFN0YWNrLmFwcFRhYmxlLFxuICAgICAgICAgICAgICAgIHJlY29yZGluZ0VDU0NsdXN0ZXJBUk46IGNka0JhY2tlbmRTdGFjay5yZWNvcmRpbmdFQ1NDbHVzdGVyQVJOLFxuICAgICAgICAgICAgICAgIHJlY29yZGluZ0VDU0NsdXN0ZXJOYW1lOiBjZGtCYWNrZW5kU3RhY2sucmVjb3JkaW5nRUNTQ2x1c3Rlck5hbWVcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgY2RrQ2hpbWVFdmVudEJyaWRnZVN0YWNrLmFkZERlcGVuZGVuY3koY2RrQmFja2VuZFN0YWNrKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGNka0Zyb250ZW5kU3RhY2sgPSBuZXcgQ2RrRnJvbnRlbmRTdGFjayh0aGlzLCBjb25maWdQYXJhbXNbJ0Nka0Zyb250ZW5kU3RhY2snXSwge1xuICAgICAgICAgICAgd2ViQXBwQnVja2V0OiBjZGtCYWNrZW5kU3RhY2sud2ViQXBwQnVja2V0LFxuICAgICAgICAgICAgd2ViQXBwQ2xvdWRGcm9udE9BSTogY2RrQmFja2VuZFN0YWNrLndlYkFwcENsb3VkRnJvbnRPQUlcbiAgICAgICAgfSk7XG4gICAgICAgIGNka0Zyb250ZW5kU3RhY2suYWRkRGVwZW5kZW5jeShjZGtCYWNrZW5kU3RhY2spO1xuICAgIH1cbn0iXX0=